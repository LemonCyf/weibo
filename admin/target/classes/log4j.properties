# 位置以及名字都必须是固定的
# rootLogger全局设置
log4j.rootLogger = debug, stdout


# log4j.Appender stdout = new org.arpache.log4j.ConsoleAppender()
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
# System.out
log4j.appender.stdout.Targeinfot = System.out
#
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
# %p: 日志级别
#%5p: 右对齐，占5个位置
#%c{1}: 输出1层类
# %M: Method
# %L: Line
# %m: message
# %n: \n
log4j.appender.stdout.layout.ConversionPattern = %5p %c{1}.%M:%L - %m%n
log4j.appender.stdout.Encoding = UTF-8

#
log4j.appender.file = org.apache.log4j.FileAppender

# 路径
log4j.appender.file.File = log/netty_log.log
log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern = [%p] %d{yyyy-MM-dd HH:mm:ss} %n%c{1}.%M:%L%n%m%n%n
# 如果文件存在，就直接在文件的最后写入
log4j.appender.file.Append = true
log4j.appender.file.Encoding = UTF-8

# 每天都回生成一个日志文件
log4j.appender.daily = org.apache.log4j.DailyRollingFileAppender
log4j.appender.daily.File = log/netty_log_daily.log
log4j.appender.daily.layout = org.apache.log4j.PatternLayout
log4j.appender.daily.layout.ConversionPattern = [%p] %d{HH:mm:ss} %n%c{1}.%M:%L%n%m%n%n
log4j.appender.daily.Append = true
log4j.appender.daily.Encoding = UTF-8
